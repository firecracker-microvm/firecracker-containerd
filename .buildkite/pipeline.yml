# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"). You may
# not use this file except in compliance with the License. A copy of the
# License is located at
#
# 	http://aws.amazon.com/apache2.0/
#
# or in the "license" file accompanying this file. This file is distributed
# on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
# express or implied. See the License for the specific language governing
# permissions and limitations under the License.

steps:

  - label: ":docker: Build"
    agents:
      queue: "${BUILDKITE_AGENT_META_DATA_QUEUE:-default}"
      distro: "${BUILDKITE_AGENT_META_DATA_DISTRO}"
      hostname: "${BUILDKITE_AGENT_META_DATA_HOSTNAME}"
    env:
      DOCKER_IMAGE_TAG: "$BUILDKITE_BUILD_NUMBER"
      EXTRAGOARGS: "-race"
    command:
      - make test-images
      - docker run --rm -v $PWD:/mnt debian:buster-slim rm -rf /mnt/tools/image-builder/rootfs
      - sudo install -d -o root -g buildkite-agent -m 775 "/local/artifacts/$BUILDKITE_BUILD_NUMBER"
      - cp tools/image-builder/rootfs.img "/local/artifacts/$BUILDKITE_BUILD_NUMBER/"

  # Just in case, list loopback devices to make sure there are no leaks.
  # We probably should move that to metrics later.
  - label: ":lint-roller: loop device cleanup"
    agents:
      queue: "${BUILDKITE_AGENT_META_DATA_QUEUE:-default}"
      distro: "${BUILDKITE_AGENT_META_DATA_DISTRO}"
      hostname: "${BUILDKITE_AGENT_META_DATA_HOSTNAME}"
    command: 'sudo losetup -l'

  - wait

  # Git history validation happens after the 'wait' step so it happens
  # in parallel with the subsequent tests and does not prevent them
  # from running in the event of a validation failure.
  - label: 'git log validation'
    command: './.buildkite/logcheck.sh'
    # This should run in the same queue, but we don't care whether it runs on
    # the same host.
    agents:
      queue: "${BUILDKITE_AGENT_META_DATA_QUEUE:-default}"

  - label: ":protractor: verify proto"
    agents:
      queue: "${BUILDKITE_AGENT_META_DATA_QUEUE:-default}"
      distro: "${BUILDKITE_AGENT_META_DATA_DISTRO}"
      hostname: "${BUILDKITE_AGENT_META_DATA_HOSTNAME}"
    env:
      DOCKER_IMAGE_TAG: "$BUILDKITE_BUILD_NUMBER"
    command:
      - make proto
      - test -z "$(git status --porcelain)" && exit 0 || git status && echo -e '\nGenerated protobuf code differs from committed, please run "make proto" and commit the updated files.\n' && exit 1
    timeout_in_minutes: 1

  - label: ":gear: unit tests"
    agents:
      queue: "${BUILDKITE_AGENT_META_DATA_QUEUE:-default}"
      distro: "${BUILDKITE_AGENT_META_DATA_DISTRO}"
      hostname: "${BUILDKITE_AGENT_META_DATA_HOSTNAME}"
    env:
      EXTRAGOARGS: "-v -count=1 -race"
      DISABLE_ROOT_TESTS: 1
    command:
      - cp "/local/artifacts/$BUILDKITE_BUILD_NUMBER/rootfs.img" tools/image-builder/rootfs.img
      - make test-in-docker
    timeout_in_minutes: 10

  - label: ":running: snapshotter isolated tests"
    agents:
      queue: "${BUILDKITE_AGENT_META_DATA_QUEUE:-default}"
      distro: "${BUILDKITE_AGENT_META_DATA_DISTRO}"
      hostname: "${BUILDKITE_AGENT_META_DATA_HOSTNAME}"
    env:
      DOCKER_IMAGE_TAG: "$BUILDKITE_BUILD_NUMBER"
      NUMBER_OF_VMS: 10
      EXTRAGOARGS: "-v -count=1 -race"
    artifact_paths:
      - "snapshotter/logs/*"
    command:
      - make -C snapshotter integ-test

  - label: ":running: runtime isolated tests"
    agents:
      queue: "${BUILDKITE_AGENT_META_DATA_QUEUE:-default}"
      distro: "${BUILDKITE_AGENT_META_DATA_DISTRO}"
      hostname: "${BUILDKITE_AGENT_META_DATA_HOSTNAME}"
    env:
      DOCKER_IMAGE_TAG: "$BUILDKITE_BUILD_NUMBER"
      NUMBER_OF_VMS: 10
      EXTRAGOARGS: "-v -count=1 -race"
      FICD_DM_VOLUME_GROUP: fcci-vg
    artifact_paths:
      - "runtime/logs/*"
    command:
      - make -C runtime integ-test FICD_DM_POOL=build_${BUILDKITE_BUILD_NUMBER}_runtime

  - label: ":weight_lifter: stress tests"
    concurrency_group: stress
    concurrency: 1
    agents:
      queue: "${BUILDKITE_AGENT_META_DATA_QUEUE:-default}"
      distro: "${BUILDKITE_AGENT_META_DATA_DISTRO}"
      hostname: "${BUILDKITE_AGENT_META_DATA_HOSTNAME}"
    env:
      DOCKER_IMAGE_TAG: "$BUILDKITE_BUILD_NUMBER"
      NUMBER_OF_VMS: 50
      EXTRAGOARGS: "-v -count=1 -race"
      FICD_DM_VOLUME_GROUP: fcci-vg
    artifact_paths:
      - "runtime/logs/*"
    command:
      - make -C runtime integ-test-TestMultipleVMs_Isolated FICD_DM_POOL=stress$BUILDKITE_BUILD_NUMBER

  - label: ":rotating_light: :exclamation: example tests"
    agents:
      queue: "${BUILDKITE_AGENT_META_DATA_QUEUE:-default}"
      distro: "${BUILDKITE_AGENT_META_DATA_DISTRO}"
      hostname: "${BUILDKITE_AGENT_META_DATA_HOSTNAME}"
    env:
      DOCKER_IMAGE_TAG: "$BUILDKITE_BUILD_NUMBER"
      EXTRAGOARGS: "-v -count=1 -race"
      FICD_DM_VOLUME_GROUP: fcci-vg
    artifact_paths:
      - "examples/logs/*"
    command:
      - make -C examples integ-test TEST_POOL=build_${BUILDKITE_BUILD_NUMBER}_example
    timeout_in_minutes: 10

  - label: ":rotating_light: cri conformance tests"
    agents:
      queue: "${BUILDKITE_AGENT_META_DATA_QUEUE:-default}"
      distro: "${BUILDKITE_AGENT_META_DATA_DISTRO}"
      hostname: "${BUILDKITE_AGENT_META_DATA_HOSTNAME}"
    env:
      DOCKER_IMAGE_TAG: "$BUILDKITE_BUILD_NUMBER"
      FICD_DM_VOLUME_GROUP: fcci-vg
    command:
      - make -C runtime critest FICD_DM_POOL=build_${BUILDKITE_BUILD_NUMBER}_critest
    timeout_in_minutes: 10

