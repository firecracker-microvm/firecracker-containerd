syntax = "proto3";

import "google/protobuf/empty.proto";
import "types.proto";

option go_package = "proto";

service Firecracker {
    // Runs new Firecracker VM instance
    rpc CreateVM(CreateVMRequest) returns (CreateVMResponse);

    // Stops existing Firecracker instance by VM ID
    rpc StopVM(StopVMRequest) returns (google.protobuf.Empty);

    // Gets VM instance socket file location
    rpc GetVMAddress(GetVMAddressRequest) returns (GetVMAddressResponse);
}

// CreateVMRequest specifies creation parameters for a new FC instance
message CreateVMRequest {
    // Specifies the machine configuration for the VM
    FirecrackerMachineConfiguration MachineCfg = 1;

    // Specifies the file path where the kernel image is located
    string KernelImagePath = 2;

    // Specifies the commandline arguments that should be passed to the kernel
    string KernelArgs = 3;

    // Specifies the root block device for the VM
    FirecrackerDrive RootDrive = 4;

    // Specifies the additional block device config for the VM.
    repeated FirecrackerDrive AdditionalDrives = 5;

    // Specifies the networking configuration for a VM
    repeated FirecrackerNetworkInterface NetworkInterfaces = 6;

    // The number of dummy drives to reserve in advance before running FC instance.
    int32 ContainerCount = 7;
}

message CreateVMResponse {
    string VMID = 1;
}

message StopVMRequest {
    string VMID = 1;
}

message GetVMAddressRequest {
    string VMID = 1;
}

message GetVMAddressResponse {
    string SocketPath = 1;
}