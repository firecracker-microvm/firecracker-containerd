# syntax=docker/dockerfile:experimental
# Test image that starts up containerd and the naive snapshotter. The default CMD will drop to a bash shell. Overrides
# to CMD will be provided appended to /bin/bash -c
FROM amazonlinux:2
ENV PATH="/bin:/usr/bin:/usr/local/bin:/sbin:/usr/sbin:/usr/local/sbin:/usr/local/go/bin"
ENV INSTALLROOT="/usr/local"
ENV DEBIAN_FRONTEND="noninteractive"

ARG FIRECRACKER_TARGET=x86_64-unknown-linux-musl
ENV FICD_LOG_DIR="/var/log/firecracker-containerd-test"
ENV FICD_SNAPSHOTTER="naive"
ENV FICD_SNAPSHOTTER_OUTFILE="${FICD_LOG_DIR}/snapshotter.out"
ENV FICD_CONTAINERD_OUTFILE="${FICD_LOG_DIR}/containerd.out"

RUN yum install -y make e2fsprogs tar gzip gcc util-linux git
RUN curl -L https://dl.google.com/go/go1.13.4.linux-amd64.tar.gz | tar zxvf - -C /usr/local
RUN mkdir -p \
    /var/run/firecracker-containerd \
    /src \
    /var/lib/firecracker-containerd/naive \
    ${FICD_LOG_DIR}

# Pull the images the tests need into the content store so we don't need internet
# access during the tests themselves. This runs as a seperate step before the other
# installs so we can minimize re-runs of the time-expensive downloading of images.
COPY tools/docker/config.toml /etc/containerd/config.toml
RUN --mount=type=bind,source=firecracker-control/cmd/containerd,target=/src \
  make -C /src install && \
  ln -sv /usr/local/bin/firecracker-containerd /usr/local/bin/containerd && \
  ln -sv /usr/local/bin/firecracker-ctr /usr/local/bin/ctr
RUN containerd 2>/dev/null & \
  ctr content fetch docker.io/library/alpine:3.10.1 >/dev/null && \
  ctr content fetch docker.io/mlabbe/iperf3:3.6-r0 >/dev/null

# Install everything we need in this image. Due to the bind-mount, if the host has already
# up-to-date versions of everything built, this step will be a very quick copy
RUN --mount=type=bind,target=/src make -C /src \
  install \
  install-firecracker \
  install-runc \
  install-default-vmlinux \
  install-default-rootfs \
  install-default-runc-jailer-config \
  install-test-cni-bins \
  demo-network

COPY tools/docker/entrypoint.sh /entrypoint
ENTRYPOINT ["/entrypoint"]
CMD ["exec /bin/bash"]
